import { forwardRef } from 'react';
import { cn } from '@/lib/utils';

interface TechLogoProps {
  name: string;
  size?: 'sm' | 'md' | 'lg' | 'xl';
  className?: string;
  animated?: boolean;
}

const logoComponents = {
  React: () => (
    <svg viewBox="0 0 24 24" fill="currentColor" className="w-full h-full">
      <circle cx="12" cy="12" r="2" fill="#61DAFB"/>
      <path d="M12,2.5c-5.5,0-10,3.1-10,7s4.5,7,10,7s10-3.1,10-7S17.5,2.5,12,2.5z" fill="none" stroke="#61DAFB" strokeWidth="1"/>
      <path d="M12,21.5c-5.5,0-10-3.1-10-7s4.5-7,10-7s10,3.1,10,7S17.5,21.5,12,21.5z" fill="none" stroke="#61DAFB" strokeWidth="1"/>
      <path d="M4,12c0-5.5,3.1-10,7-10s7,4.5,7,10s-3.1,10-7,10S4,17.5,4,12z" fill="none" stroke="#61DAFB" strokeWidth="1"/>
    </svg>
  ),
  TypeScript: () => (
    <svg viewBox="0 0 24 24" fill="currentColor" className="w-full h-full">
      <rect width="24" height="24" fill="#3178C6" rx="2"/>
      <path d="M11.5 6.5h-7v2h2.5v8h2v-8h2.5v-2z" fill="white"/>
      <path d="M15.5 8.5c0-1.1.9-2 2-2s2 .9 2 2-.9 2-2 2h-1v2h1c1.1 0 2 .9 2 2s-.9 2-2 2-2-.9-2-2h-1.5c0 1.9 1.6 3.5 3.5 3.5s3.5-1.6 3.5-3.5c0-.8-.3-1.5-.8-2 .5-.5.8-1.2.8-2 0-1.9-1.6-3.5-3.5-3.5S14 6.6 14 8.5h1.5z" fill="white"/>
    </svg>
  ),
  TailwindCSS: () => (
    <svg viewBox="0 0 24 24" fill="currentColor" className="w-full h-full">
      <path d="M12 6c-2.67 0-4.33 1.33-5 4 1-1.33 2.17-1.83 3.5-1.5.76.19 1.31.74 1.91 1.35.98 1 2.12 2.15 4.59 2.15 2.67 0 4.33-1.33 5-4-1 1.33-2.17 1.83-3.5 1.5-.76-.19-1.31-.74-1.91-1.35C15.61 7.15 14.47 6 12 6zm-5 6c-2.67 0-4.33 1.33-5 4 1-1.33 2.17-1.83 3.5-1.5.76.19 1.31.74 1.91 1.35.98 1 2.12 2.15 4.59 2.15 2.67 0 4.33-1.33 5-4-1 1.33-2.17 1.83-3.5 1.5-.76-.19-1.31-.74-1.91-1.35C10.61 13.15 9.47 12 7 12z" fill="#06B6D4"/>
    </svg>
  ),
  Supabase: () => (
    <svg viewBox="0 0 24 24" fill="currentColor" className="w-full h-full">
      <path d="M12.857 2.833A.745.745 0 0 0 12 2.5c-.473 0-.857.313-.857.7v7.467s-.4.333-.833.333c-.433 0-.833-.333-.833-.333V3.2c0-.387-.384-.7-.857-.7s-.857.313-.857.7v7.467L7.33 11c-.246-.2-.603-.2-.85 0-.245.2-.245.533 0 .733l1.166 1 .854.733L12 16.5l3.5-3.033.854-.734 1.166-1c.245-.2.245-.533 0-.733-.247-.2-.604-.2-.85 0l-1.433 1.233V3.2c0-.387-.384-.7-.857-.7z" fill="#3FCF8E"/>
    </svg>
  ),
  GitHub: () => (
    <svg viewBox="0 0 24 24" fill="currentColor" className="w-full h-full">
      <path d="M12 0C5.37 0 0 5.37 0 12c0 5.31 3.435 9.795 8.205 11.385.6.105.825-.255.825-.57 0-.285-.015-1.23-.015-2.235-3.015.555-3.795-.735-4.035-1.41-.135-.345-.72-1.41-1.23-1.695-.42-.225-1.02-.78-.015-.795.945-.015 1.62.87 1.845 1.23 1.08 1.815 2.805 1.305 3.495.99.105-.78.42-1.305.765-1.605-2.67-.3-5.46-1.335-5.46-5.925 0-1.305.465-2.385 1.23-3.225-.12-.3-.54-1.53.12-3.18 0 0 1.005-.315 3.3 1.23.96-.27 1.98-.405 3-.405s2.04.135 3 .405c2.295-1.56 3.3-1.23 3.3-1.23.66 1.65.24 2.88.12 3.18.765.84 1.23 1.905 1.23 3.225 0 4.605-2.805 5.625-5.475 5.925.435.375.81 1.095.81 2.22 0 1.605-.015 2.895-.015 3.3 0 .315.225.69.825.57A12.02 12.02 0 0 0 24 12c0-6.63-5.37-12-12-12z" fill="#333"/>
    </svg>
  ),
  Vercel: () => (
    <svg viewBox="0 0 24 24" fill="currentColor" className="w-full h-full">
      <path d="M12 0l12 21H0L12 0z" fill="#000"/>
    </svg>
  ),
  OpenAI: () => (
    <svg viewBox="0 0 24 24" fill="currentColor" className="w-full h-full">
      <path d="M22.282 9.821a5.985 5.985 0 0 0-.516-4.91 6.046 6.046 0 0 0-6.51-2.9A6.065 6.065 0 0 0 4.981 4.18a5.985 5.985 0 0 0-3.998 2.9 6.046 6.046 0 0 0 .743 7.097 5.98 5.98 0 0 0 .51 4.911 6.078 6.078 0 0 0 6.51 2.9A5.991 5.991 0 0 0 12 21.533a6.004 6.004 0 0 0 5.662.445 6.078 6.078 0 0 0 2.132-1.949 6.046 6.046 0 0 0 .388-4.982 6.036 6.036 0 0 0 2.1-5.226zm-9.126 8.019a3.5 3.5 0 1 1 0-7 3.5 3.5 0 0 1 0 7z" fill="#74AA9C"/>
    </svg>
  ),
  Stripe: () => (
    <svg viewBox="0 0 24 24" fill="currentColor" className="w-full h-full">
      <path d="M13.976 9.15c-2.172-.806-3.596-1.191-3.596-2.2 0-.9.777-1.5 2.06-1.5a9.508 9.508 0 0 1 4.224 1.21l.806-5.268c-1.533-.734-3.166-1.093-4.805-1.093-4.244 0-7.246 2.226-7.246 5.946 0 3.697 3.104 4.949 5.652 5.848 2.172.806 3.596 1.191 3.596 2.2 0 .9-.777 1.5-2.06 1.5a9.508 9.508 0 0 1-4.224-1.21l-.806 5.268c1.533.734 3.166 1.093 4.805 1.093 4.244 0 7.246-2.226 7.246-5.946 0-3.697-3.104-4.949-5.652-5.848z" fill="#6772E5"/>
    </svg>
  ),
  Figma: () => (
    <svg viewBox="0 0 24 24" fill="currentColor" className="w-full h-full">
      <path d="M8.5 24a3.5 3.5 0 0 1-3.5-3.5v-3.5h3.5a3.5 3.5 0 0 1 0 7z" fill="#0ACF83"/>
      <path d="M5 13.5a3.5 3.5 0 0 1 3.5-3.5h3.5v7H8.5A3.5 3.5 0 0 1 5 13.5z" fill="#A259FF"/>
      <path d="M5 6.5A3.5 3.5 0 0 1 8.5 3h3.5v7H8.5A3.5 3.5 0 0 1 5 6.5z" fill="#F24E1E"/>
      <path d="M12 3h3.5a3.5 3.5 0 0 1 0 7H12V3z" fill="#FF7262"/>
      <path d="M19 13.5a3.5 3.5 0 1 1-7 0 3.5 3.5 0 0 1 7 0z" fill="#1ABCFE"/>
    </svg>
  ),
  Notion: () => (
    <svg viewBox="0 0 24 24" fill="currentColor" className="w-full h-full">
      <path d="M4.459 4.208c.746.606 1.026.56 2.428.466l13.215-.793c.28 0 .047-.28-.046-.326L17.86 1.968c-.42-.326-.981-.7-2.055-.607L3.01 2.295c-.466.046-.56.28-.374.466l1.823 1.447zm.793 3.08v13.904c0 .747.373 1.027 1.214.98l14.523-.84c.841-.046.935-.56.935-1.167V6.354c0-.606-.233-.933-.748-.887l-15.177.887c-.56.047-.747.327-.747.933zm14.337.745c.093.42 0 .84-.42.888l-.7.14v10.264c-.608.327-1.168.514-1.635.514-.748 0-.935-.234-1.495-.933l-4.577-7.186v6.952L12.21 19s0 .84-1.168.84l-3.222.186c-.093-.186 0-.653.327-.746l.84-.233V9.854L7.822 9.76c-.094-.42.14-1.026.793-1.073l3.456-.233 4.764 7.279v-6.44l-1.215-.139c-.093-.514.28-.887.747-.933l3.222-.187z" fill="#000"/>
    </svg>
  ),
  Slack: () => (
    <svg viewBox="0 0 24 24" fill="currentColor" className="w-full h-full">
      <path d="M5.042 15.165a2.528 2.528 0 0 1-2.52 2.523A2.528 2.528 0 0 1 0 15.165a2.527 2.527 0 0 1 2.522-2.52h2.52v2.52zM6.313 15.165a2.527 2.527 0 0 1 2.521-2.52 2.527 2.527 0 0 1 2.521 2.52v6.313A2.528 2.528 0 0 1 8.834 24a2.528 2.528 0 0 1-2.521-2.522v-6.313zM8.834 5.042a2.528 2.528 0 0 1-2.521-2.52A2.528 2.528 0 0 1 8.834 0a2.528 2.528 0 0 1 2.521 2.522v2.52H8.834zM8.834 6.313a2.528 2.528 0 0 1 2.521 2.521 2.528 2.528 0 0 1-2.521 2.521H2.522A2.528 2.528 0 0 1 0 8.834a2.528 2.528 0 0 1 2.522-2.521h6.312zM18.956 8.834a2.528 2.528 0 0 1 2.522-2.521A2.528 2.528 0 0 1 24 8.834a2.528 2.528 0 0 1-2.522 2.521h-2.522V8.834zM17.688 8.834a2.528 2.528 0 0 1-2.523 2.521 2.527 2.527 0 0 1-2.52-2.521V2.522A2.527 2.527 0 0 1 15.165 0a2.528 2.528 0 0 1 2.523 2.522v6.312zM15.165 18.956a2.528 2.528 0 0 1 2.523 2.522A2.528 2.528 0 0 1 15.165 24a2.527 2.527 0 0 1-2.52-2.522v-2.522h2.52zM15.165 17.688a2.527 2.527 0 0 1-2.52-2.523 2.526 2.526 0 0 1 2.52-2.52h6.313A2.527 2.527 0 0 1 24 15.165a2.528 2.528 0 0 1-2.522 2.523h-6.313z" fill="#E01E5A"/>
    </svg>
  )
};

const sizeClasses = {
  sm: 'w-6 h-6',
  md: 'w-8 h-8',
  lg: 'w-12 h-12',
  xl: 'w-16 h-16'
};

const TechLogo = forwardRef<HTMLDivElement, TechLogoProps>(
  ({ name, size = 'md', className, animated = true }, ref) => {
    const LogoComponent = logoComponents[name as keyof typeof logoComponents];
    
    if (!LogoComponent) {
      return (
        <div 
          ref={ref}
          className={cn(
            sizeClasses[size], 
            'bg-muted rounded-lg flex items-center justify-center text-muted-foreground',
            animated && 'hover:scale-110 transition-transform duration-200',
            className
          )}
        >
          <span className="text-xs font-medium">{name.slice(0, 2)}</span>
        </div>
      );
    }

    return (
      <div 
        ref={ref}
        className={cn(
          sizeClasses[size],
          'flex items-center justify-center transition-all duration-200',
          animated && 'hover:scale-110 hover:rotate-3',
          className
        )}
        title={name}
      >
        <LogoComponent />
      </div>
    );
  }
);

TechLogo.displayName = "TechLogo";

export { TechLogo };